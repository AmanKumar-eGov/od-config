spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://postgres:5432/oddb
spring.datasource.username=postgres
spring.datasource.password=postgres

spring.jpa.show-sql=false

#Set context root
server.context-path=/access
server.servlet.context-path=/access
server.port = 8091

spring.flyway.user=postgres
spring.flyway.password=postgres
spring.flyway.outOfOrder=true
spring.flyway.table=access_control_schema_version
spring.flyway.baseline-on-migrate=true
spring.flyway.url=jdbc:postgresql://postgres:5432/oddb
#flyway.locations=db/migration/ddl,db/migration/seed,db/migration/dev
spring.flyway.locations=classpath:/db/migration/ddl


logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
app.timezone=UTC

role.mdms.filter=[?(@.rolecode IN [$rolecode])]
action.mdms.filter=[?(@.id IN [$actionid] && @.enabled == $enabled)]
action.mdms.search.filter=[?(@.id IN [$actionid])]
egov.mdms.host=http://egov-mdms-service:8094
egov.mdms.path=/egov-mdms-service/v1/_search
mdms.roleaction.path=$.MdmsRes.ACCESSCONTROL-ROLEACTIONS.roleactions
mdms.actions.path=$.MdmsRes.ACCESSCONTROL-ACTIONS.actions
mdms.actionstest.path=$.MdmsRes.ACCESSCONTROL-ACTIONS-TEST.
mdms.role.path=$.MdmsRes.ACCESSCONTROL-ROLES.roles
mdms.roles.filter=[?(@.code IN [$code])]
mdms.roleactionmodule.name=ACCESSCONTROL-ROLEACTIONS
mdms.actionstestmodule.name=ACCESSCONTROL-ACTIONS-TEST
mdms.actionsmodule.name=ACCESSCONTROL-ACTIONS
mdms.rolemodule.name=ACCESSCONTROL-ROLES
mdms.rolemaster.name=roles
mdms.actionmaster.names=actions
mdms.actiontestmaster.names=actions-test
mdms.roleactionmaster.names=roleactions

action.master.mdms.filter=[*]['id','url']
cache.expiry.role.action.minutes=15

management.endpoints.web.base-path=/